{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const {\n    ethereum\n  } = window;\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem('connected_account')) {\n      ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(res => {\n        console.log(res);\n\n        if (localStorage.getItem('connected_account') !== res[0]) {\n          setIsConnected(true);\n        } else setAccountAddress(localStorage.getItem('connected_account'));\n      });\n    }\n  }, []);\n\n  if (!accountAddress) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"authentication__authenticate\",\n        onClick: async () => {\n          ethereum.request({\n            method: 'eth_requestAccounts'\n          }).then(res => {\n            ethereum.request({\n              method: 'personal_sign',\n              from: res[0],\n              params: [[{\n                type: 'string',\n                name: 'Message',\n                value: 'Подтвердите подписание'\n              }], res[0]]\n            }).then(result => {\n              setAccountAddress(res[0]);\n              localStorage.setItem('connected_account', res[0]);\n            });\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authentication__warning\",\n        children: \"Your MetaMask account is different from the one you authenticated with before\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"account__address\",\n      children: accountAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(MainPage, \"8szNtym3HwXU/2r3phWRGTb9ewk=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/usr/src/app/src/pages/index.tsx"],"names":["useEffect","useState","MainPage","ethereum","window","accountAddress","setAccountAddress","isConnected","setIsConnected","localStorage","getItem","request","method","then","res","console","log","from","params","type","name","value","result","setItem"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAmB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAeC,MAArB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGS,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAH,EAA8C;AAC7CP,MAAAA,QAAQ,CAACQ,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,EAAoDC,IAApD,CAA0DC,GAAD,IAAc;AACtEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAGL,YAAY,CAACC,OAAb,CAAqB,mBAArB,MAA8CI,GAAG,CAAC,CAAD,CAApD,EAAyD;AACxDN,UAAAA,cAAc,CAAC,IAAD,CAAd;AACA,SAFD,MAICF,iBAAiB,CAACG,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAD,CAAjB;AACD,OAPD;AAQA;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAG,CAACL,cAAJ,EAAoB;AACnB,wBACC;AAAA,8BACC;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAiD,QAAA,OAAO,EAAE,YAAY;AACrEF,UAAAA,QAAQ,CAACQ,OAAT,CAAiB;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAjB,EAAoDC,IAApD,CAA0DC,GAAD,IAAc;AACtEX,YAAAA,QAAQ,CAACQ,OAAT,CAAiB;AAAEC,cAAAA,MAAM,EAAE,eAAV;AAA2BK,cAAAA,IAAI,EAAEH,GAAG,CAAC,CAAD,CAApC;AAAyCI,cAAAA,MAAM,EAAE,CACjE,CACC;AACCC,gBAAAA,IAAI,EAAE,QADP;AAECC,gBAAAA,IAAI,EAAE,SAFP;AAGCC,gBAAAA,KAAK,EAAE;AAHR,eADD,CADiE,EAQjEP,GAAG,CAAC,CAAD,CAR8D;AAAjD,aAAjB,EASKD,IATL,CASWS,MAAD,IAAiB;AAC1BhB,cAAAA,iBAAiB,CAACQ,GAAG,CAAC,CAAD,CAAJ,CAAjB;AACAL,cAAAA,YAAY,CAACc,OAAb,CAAqB,mBAArB,EAA0CT,GAAG,CAAC,CAAD,CAA7C;AACA,aAZD;AAaA,WAdD;AAeA;AAhBD;AAAA;AAAA;AAAA;AAAA,cADD,EAoBEP,WAAW,iBACX;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBADD;AA4BA,GA7BD,MA8BK;AACJ,wBACC;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBACEF;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;AACD,CAvDD;;GAAMH,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst MainPage = (): JSX.Element => {\n\tconst { ethereum } = window as any;\n\tconst [accountAddress, setAccountAddress] = useState(null);\n\tconst [isConnected, setIsConnected] = useState(false);\n\n\tuseEffect(() => {\n\t\tif(localStorage.getItem('connected_account')) {\n\t\t\tethereum.request({ method: 'eth_requestAccounts' }).then((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif(localStorage.getItem('connected_account') !== res[0]) {\n\t\t\t\t\tsetIsConnected(true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetAccountAddress(localStorage.getItem('connected_account') as any);\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tif(!accountAddress) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button className='authentication__authenticate' onClick={async () => {\n\t\t\t\t\tethereum.request({ method: 'eth_requestAccounts' }).then((res: any) => {\n\t\t\t\t\t\tethereum.request({ method: 'personal_sign', from: res[0], params: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tname: 'Message',\n\t\t\t\t\t\t\t\t\tvalue: 'Подтвердите подписание'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tres[0]\n\t\t\t\t\t\t] }).then((result: any) => {\n\t\t\t\t\t\t\tsetAccountAddress(res[0]);\n\t\t\t\t\t\t\tlocalStorage.setItem('connected_account', res[0]);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}}>\n\t\n\t\t\t\t</button>\n\t\t\t\t{isConnected && (\n\t\t\t\t\t<p className='authentication__warning'>\n\t\t\t\t\t\tYour MetaMask account is different from the one you authenticated with before\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n\telse {\n\t\treturn (\n\t\t\t<p className='account__address'>\n\t\t\t\t{accountAddress}\n\t\t\t</p>\n\t\t);\n\t}\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}